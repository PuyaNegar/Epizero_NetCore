@using Common.Functions
@model PanelPresentationLayer.ComponentModel.ImageUploader
@{
    var a = Model.IsSquareImage;
}
<script type="text/javascript">
    function @(Model.Name)ResetImage() {
        document.getElementById('@(Model.Name)Image').src = '@Model.DefualuNullImagePath';
    }
    //******************************************************************************************************
    function @(Model.Name)SetImage() {
        if (@(Model.KnockoutExpressionString) == '' || @(Model.KnockoutExpressionString) == null) {
            document.getElementById('@(Model.Name)Image').src = '@Model.DefualuNullImagePath';
        } else {
            document.getElementById('@(Model.Name)Image').src = '@AppConfigProvider.CdnUrl()' + @(Model.KnockoutExpressionString);
        }
    }
    //******************************************************************************************************
    $(function () {
        //******************************************************************************************************
        $('#@(Model.Name)SelectorBtn').click(function () {
            $('#@(Model.Name)Selector').click();
        });
        //******************************************************************************************************
        $('#@(Model.Name)Selector').change(function () {
            var type = document.getElementById('@(Model.Name)Selector').files[0].type;

            if ($(this).val() != '' && $(this).val() != null) {
                if (type == "image/jpeg" || type == "image/png") {
                    getImageSize();
                } else {
                    toastr.remove();
                    toastr.error('فرمت عکس بايستی jpg يا png باشد');
                    return;
                }
            }
           });
        //******************************************************************************************************
            function getImageSize() {
                var size = document.getElementById('@(Model.Name)Selector').files[0].size;
                if (size > @Model.MaxImageSize*1024) {
                    toastr.remove();
                    var errorMessage = 'حجم فايل نبایستی بيش از # کیلوبایت باشد';
                    errorMessage = errorMessage.replace('#', '@Model.MaxImageSize');
                    toastr.error(errorMessage);
                } else {
                  var img = new Image;
                  img.onload = function () {
                      @if (Model.IsSquareImage)
                      {
                         <text>
                            if (img.width != img.height) {
                               var errorMessage = 'عکس به عرض # ‍‍‍‍‍‍پیکسل و به طول ؟ پیکسل می باشد برای انجام عملیات آپلود باید عرض و طول عکس یکسان باشد';
                               errorMessage = errorMessage.replace('#', img.width);
                               errorMessage = errorMessage.replace('؟', img.height);
                               toastr.error(errorMessage);
                            } else {
                                checkImageSize(img);
                            }
                         </text>
                      }
                      else
                      {
                          <text>
                            checkImageSize(img);
                          </text>
                      }
                    }
                    img.src = URL.createObjectURL(document.getElementById('@(Model.Name)Selector').files[0]);
                }
            }
        //******************************************************************************************************
            function checkImageSize(img) {
                var isTrueImageSize = true;
                if (!(img.width >= @Model.MinImageWidth && img.width <= @Model.MaxImageWidth)){
                    isTrueImageSize = false;
                    toastr.error('عرض عکس باید متناسب باشد');
                }
                if (!(img.height >= @Model.MinImageHeight && img.height <= @Model.MaxImageHeight)){
                    isTrueImageSize = false;
                    toastr.error('طول عکس باید متناسب باشد');
                }
                if (isTrueImageSize) {
                    viewImage();
                }
            }
        //******************************************************************************************************
            function viewImage() {
                var file = new FileReader();
                file.onload = function () {
                    @Model.KnockoutExpressionString = file.result;
                }
                file.readAsDataURL(document.getElementById('@(Model.Name)Selector').files[0]);
                document.getElementById('@(Model.Name)Image').src = URL.createObjectURL(document.getElementById('@(Model.Name)Selector').files[0]);
            }
         //******************************************************************************************************
            @if (Model.HasDeleteBtn)
            {
                <text>
                $('#@(Model.Name)RemoveBtn').click(function () {
                   @Model.KnockoutExpressionString = 'NULL';
                   $('#@(Model.Name)Selector').val('');
                   document.getElementById('@(Model.Name)Image').src = '@Model.DefualuNullImagePath';
                });
               </text>

            }
         //******************************************************************************************************
          $('#@(Model.Name)Image').click(function () {
                window.open($(this).attr('src'), '_blank');
           });
         //******************************************************************************************************
    });
</script>
<center>
    <div style="margin-bottom:3px;color:#012e80;">@Model.Title</div>
    <img id="@(Model.Name)Image" alt="" data-src="" class="img-rounded" style="max-width: 150px;  " src="@Model.DefualuNullImagePath" data-holder-rendered="true">
    <br />
    <button type="button" id="@(Model.Name)SelectorBtn" class=" btn btn-info btn-sm" style="margin-top:10px;">
        <span class="glyphicon glyphicon-open" aria-hidden="true"></span>   @(Model.ButtonFarsiName)
    </button>
    @if (Model.HasDeleteBtn)
    {
        <button type="button" id="@(Model.Name)RemoveBtn" class=" btn btn-danger btn-sm" style="margin-top:10px;">
            <span class="glyphicon glyphicon-remove" aria-hidden="true"></span>  <span> حذف</span>
        </button>
    }
    <div style="margin-top:10px;"> 
        <p style="white-space:pre-line; line-height:22px; text-align:center; color:darkgrey">@Model.Description</p> 
    </div>
    <input id="@(Model.Name)Selector" style="display:none;" type="file" accept="image/*">
</center> 