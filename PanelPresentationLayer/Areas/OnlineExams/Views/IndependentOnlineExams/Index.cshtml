@model IEnumerable<PanelViewModels.TrainingManagementViewModels.IndependentOnlineExamsViewModel>
@{
    ViewData["Title"] = "زیر آزمون ها";
    ViewData["PageFarsiName"] = "زیر آزمون ها";
    string Area = "OnlineExams";
    string Controller = "IndependentOnlineExams";
}
<link href="~/lib/clockPicker/bootstrap-clockpicker.min.css" rel="stylesheet" />
<style type="text/css">
    .none {
        display: none;
    }

    .popover {
        right: auto !important;
    }

    .popover-title {
        direction: ltr !important;
    }

    .popover > .arrow, .popover > .arrow {
        border-style: none !important;
    }
</style>
<script src="~/js/DataBindingServerSide.min.js"></script>
<script src="~/lib/clockPicker/bootstrap-clockpicker.min.js"></script>
<script id="operands" type="text/html">
    <div class="dropdown clearfix" style="float:right;margin-right:5px;">
        <button class="btn btn-info btn-xs edit" type="button" style="margin-left:10px; margin-top:2px;  width:70px; "><i class="fa fa-pencil" style="margin-left: 1px;"></i>ویرايش</button>
        <button style="margin-top: 2px;width: 100px;" class="btn btn-default dropdown-toggle btn-xs" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true"> موارد بیشتر <span class="caret"></span> </button>
        <ul class="dropdown-menu pull-left">
            <li><a class="courseMeetingStudentsBtn"><span class="glyphicon glyphicon-check" aria-hidden="true"></span> افزودن دانش آموزان به آزمون </a></li>
            <li><a class="tagnestedPro btnOlineExamStuedents"><span class="glyphicon glyphicon-user" aria-hidden="true"></span> مشاهده وضعیت دانش آموزان</a></li>
            <li><a class="tagnestedPro btnOlineExamQuestions"><span class="glyphicon glyphicon-question-sign" aria-hidden="true"></span>سوالات آزمون</a></li>
            <li><a class="tagnestedPro btnArrangeQuestions"><span class="glyphicon glyphicon-list" aria-hidden="true"></span>ترتیب سوالات</a></li>
            @*<li class="li-btnExportQuestions"><a class="tagnestedPro btnExportQuestions"><span class="glyphicon glyphicon-print" aria-hidden="true"></span>پرینت سوالات</a></li>*@
            <li><a class="tagnestedPro btnBatchFinalizeExam"><span class="glyphicon glyphicon-eject" aria-hidden="true"></span>نهایی کردن آزمون</a></li>
            <li><a class="tagnestedPro btnOnlineExamResultAllStuedent"><span class="glyphicon glyphicon-record" aria-hidden="true"></span>کارنامه جزئی</a></li>
            <li><a class="tagnestedPro btnOnlineExamTopRankingResults"><span class="glyphicon glyphicon-file" aria-hidden="true"></span>کارنامه کلی</a></li>
            <li><a class="tagnestedPro btnOnlineExamAnsweringPercentages"><span class="glyphicon glyphicon-list-alt" aria-hidden="true"></span>درصد پاسخگویی</a></li>
                 <li><a class="tagnestedPro btnUploadPDF questions"><span class="glyphicon glyphicon-list-alt" aria-hidden="true"></span>آپلود فایل PDF سوالات</a></li>
            @if (ViewBag.IsMultiTeacher == true)
            {
                    <li class="teacherAssignment"><a class="teacherAssignmentBtn"><span class="glyphicon glyphicon-check" aria-hidden="true"></span> انتساب دبیر </a></li>
            }
            </ul>
    </div>
</script>
<script type="text/javascript">
    extendViewModelColumns.push('OnlineExamId');
    MainViewModel.ta = ko.observable({});
    DataBind('/@Area/@Controller/Add/',
        '/@Area/@Controller/Read/' + @ViewBag.CourseId,
        '/@Area/@Controller/Find/',
        '/@Area/@Controller/Update/',
        '/@Area/@Controller/Delete/', '', true);

    $(function () {
        rebulidChosen('#TeacherUserId');
        GenerateReturnBtn();
        rebulidChosen("#OnlineExamFieldIds");
        rebulidChosen("#Edit_OnlineExamFieldIds");
        //================================
        AddBoxModalOnShow = function () {
            MainViewModel.c().CourseId = '@ViewBag.CourseId';
            MainViewModel.c().TeacherUserId = @ViewBag.TeacherUserId;
        }
        //=================================
        EditBoxModelOnShow = function () {
            MainViewModel.e().CourseId = '@ViewBag.CourseId';
            MainViewModel.e().TeacherUserId = @ViewBag.TeacherUserId;
            //=-=-=-=-=-=-=-=-=-=
            for (i = 0; i < MainViewModel.e().OnlineExamFieldIds.length; i++) {
                $('#Edit_OnlineExamFieldIds > option[value=' + MainViewModel.e().OnlineExamFieldIds[i] + ']').prop("selected", true);
                $('#Edit_OnlineExamFieldIds').trigger("chosen:updated");
            }
        }
        //***************************************************************************
        $('#AddForm button[type=submit]').click(function () {
            MainViewModel.c().OnlineExamFieldIds = $('#OnlineExamFieldIds').val();
        });
        //***************************************************************************
        $('#EditForm button[type=submit]').click(function () {
            MainViewModel.e().OnlineExamFieldIds = $('#Edit_OnlineExamFieldIds').val();
        });
        //**********************************************
        EditBoxModelOnHide = function () {
            $('#Edit_OnlineExamFieldIds > option').prop("selected", false);
            $('#Edit_OnlineExamFieldIds').trigger("chosen:updated");
        }
        //**********************************************
        AddBoxModalOnHide = function () {
            $('#OnlineExamFieldIds > option').prop("selected", false);
            $('#OnlineExamFieldIds').trigger("chosen:updated");
        }

        //**********************************************
        $('body').on('change', '#IsAvailableForSpecificFields,#Edit_IsAvailableForSpecificFields', function () {
            if ($(this).val() == 0) {
                $('.fildsWrap').hide();
                $('#Edit_OnlineExamFieldIds > option').prop("selected", false);
                $('#Edit_OnlineExamFieldIds').trigger("chosen:updated");
                $('#OnlineExamFieldIds > option').prop("selected", false);
                $('#OnlineExamFieldIds').trigger("chosen:updated");
            } else {
                $('.fildsWrap').show();
            }
        });
        $('#IsAvailableForSpecificFields,#Edit_IsAvailableForSpecificFields').change();
        //**********************************************
        $('#StartTime , #Edit_StartTime').clockpicker();
        //**********************************************
        $(window).scroll(function () {
            $('#StartTime').clockpicker('hide');
        });
        //**********************************************
        $('#AddBox, #EditBox').scroll(function () {
            $('#StartTime').clockpicker('hide');
        });
        //**********************************************
        $('body').on('click', '.courseMeetingStudentsBtn', function () {
            var id = $('#modelList').DataTable().row($(this).parents('tr').eq(0)).data().Id;
            pageLoader('#PageContent', '#pageLoader', '/TrainingManagement/CourseMeetingStudents/Index/' + id, true);
        });
        //**********************************************
        $('body').on('click', '.btnOlineExamStuedents', function () {
            var id = $('#modelList').DataTable().row($(this).parents('tr').eq(0)).data().OnlineExamId;
            pageLoader('#PageContent', '#pageLoader', '/OnlineExams/OnlineExamStudents/Index/' + id, true);
        });
        //**********************************************
        $('body').on('click', '.btnOnlineExamTopRankingResults', function () {
            var id = $('#modelList').DataTable().row($(this).parents('tr').eq(0)).data().OnlineExamId;
            pageLoader('#PageContent', '#pageLoader', '/OnlineExams/OnlineExamTopRankingResults/Index/' + id, true);
        });
        $('body').on('click', '.btnOnlineExamAnsweringPercentages', function () {
            var id = $('#modelList').DataTable().row($(this).parents('tr').eq(0)).data().Id;
            pageLoader('#PageContent', '#pageLoader', '/OnlineExams/OnlineExamAnsweringPercentages/Index/' + id, true);
        });
        //**********************************************
        $('body').on('click', '.btnUploadPDF', function () {
            var id = $('#modelList').DataTable().row($(this).parents('tr').eq(0)).data().Id;
            var Name = $('#modelList').DataTable().row($(this).parents('tr').eq(0)).data().Name;
            $("#OnlineExamId").val(id);
            $("#OnlineExamName").val(Name);
            $('#UploadQuestionPDFModal').modal({ backdrop: 'static', keyboard: false });
            $('#UploadQuestionPDFModal').modal('show');
        });
        //**********************************************
        $('body').on('click', '.btnOlineExamQuestions', function () {
            var id = $('#modelList').DataTable().row($(this).parents('tr').eq(0)).data().OnlineExamId;
            pageLoader('#PageContent', '#pageLoader', '/OnlineExams/OnlineExamQuestions/Index/' + id, true);
        });
        //**********************************************
        $('body').on('click', '.btnArrangeQuestions', function () {
            var id = $('#modelList').DataTable().row($(this).parents('tr').eq(0)).data().OnlineExamId;
            pageLoader('#PageContent', '#pageLoader', '/OnlineExams/ArrangeQuestions/Index/' + id, true);
        });
        //**********************************************
        $('body').on('click', '.btnExportQuestions', function () {
            var id = $('#modelList').DataTable().row($(this).parents('tr').eq(0)).data().OnlineExamId;
            window.open('/OnlineExams/OnlineExams/ExportWithMultipleOptionPage/' + id, '_blank');
        });
        //**********************************************
        $('body').on('click', '.btnOnlineExamResultAllStuedent', function () {
            var id = $('#modelList').DataTable().row($(this).parents('tr').eq(0)).data().OnlineExamId;
            pageLoader('#PageContent', '#pageLoader', '/OnlineExams/StudentOnlineExamResults/ShowAllResultPage/' + id, true);
        });
        //**********************************************
        $('body').on('click', '.teacherAssignmentBtn', function () {
            var id = $('#modelList').DataTable().row($(this).parents('tr')).data().Id;

            $('#teacherAssignmentModal').modal({ backdrop: 'static', keyboard: false });
            $('#teacherAssignmentModal').modal('show');
        });
        //**********************************************
        $('body').on('click', '.btnBatchFinalizeExam', function () {
            var id = $('#modelList').DataTable().row($(this).parents('tr').eq(0)).data().OnlineExamId;
            console.log('id', id)
            bootbox.confirm({
                message: "آیا برای نهایی کردن آزمون مطمئن می باشید؟",
                buttons: {
                    confirm: {
                        label: 'تایید',
                        className: 'btn-primary'
                    },
                    cancel: {
                        label: 'انصراف',
                        className: 'btn-default'
                    }
                },
                callback: function (result) {
                    if (result) {
                        DataTransfer('/OnlineExams/StudentOnlineExamBatchFinalize/Operation/' + id, '', '#resultLoader',
                            function (f) {
                                if (!f.IsSuccess) {
                                    toastr.error(f.Message);
                                } else {
                                    toastr.success(f.Message);
                                }
                            },
                            function (e) {
                                toastr.remove();
                                toastr.error("خطا در ارتباط با سرور");
                            }
                        );
                    }
                }
            });
        });
        //**********************************************
        $('body').on('click', '.teacherAssignmentBtn', function () {
            var id = $('#modelList').DataTable().row($(this).parents('tr')).data().Id;
            DataTransfer('/TrainingManagement/CourseMeetingDedicatedTeachers/Find', ko.toJSON({ Id: id }), '#resultLoader',
                function (e) {
                    toastr.remove();
                    var f = e;
                    if (!f.IsSuccess) {
                        toastr.error(f.Message);
                    } else {
                        toastr.remove();
                        $('#CourseMeetingDedicated_TeacherUserId').val(f.Value.TeacherUserId).change();
                        MainViewModel.ta(f.Value);
                        rebulidChosen('#CourseMeetingDedicated_TeacherUserId');
                        $('#teacherAssignmentModal').modal({ backdrop: 'static', keyboard: false });
                        $('#teacherAssignmentModal').modal('show');
                    }
                },
                function (e) {
                    toastr.remove();
                    toastr.error("خطا در ارتباط با سرور");
                }
            );
        });
        //=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        $('#teacherAssignmentForm button[type=submit]').click(function () {
            toastr.remove();
            if ($('#CourseMeetingDedicated_TeacherUserId').val() == 0) {
                toastr.error('دبیر را انتخاب کنید');
                return false;
            }
            DataTransfer('/TrainingManagement/CourseMeetingDedicatedTeachers/Update', ko.toJSON(MainViewModel.ta()), '#resultLoader',
                function (e) {
                    toastr.remove();
                    var f = e;
                    if (!f.IsSuccess) {
                        toastr.error(f.Message);
                    } else {
                        toastr.remove();
                        toastr.success(f.Message);
                        $('#teacherAssignmentModal').modal('hide');
                    }
                },
                function (e) {
                    toastr.remove();
                    toastr.error("خطا در ارتباط با سرور");
                }
            );
            return false;
        })
    });
</script>
<div class="row">
    <div class="col-lg-12">
        <div class="widget">
            <div class="widget-header">
                <span class="widget-caption">نمايش اطلاعات</span>
                <div class="widget-buttons">
                    <a href="#" data-toggle="maximize">
                        <i class="fa fa-expand"></i>
                    </a>
                </div><!--Widget Buttons-->
            </div><!--Widget Header-->
            <div class="widget-body bordered-top bordered-gray" style="height: auto;">
                <div id="mainArea">
                    @await Html.PartialAsync("~/Views/Shared/_ActionButtonsPartial.cshtml")
                    <div class="alert alert-info" role="alert">
                        <div class="row">
                            <div class="col-sm-12">
                                <div style="margin-bottom:0;color:#a86363; font-size:14px !important; padding:7px;" class="form-group">
                                    <span class="glyphicon glyphicon-time alert-info-icon"></span>  زیر آزمون های مربوط به آزمون <span class="alert-info-text"> @(ViewBag.CourseName)  </span>
                                </div>
                            </div>
                        </div>
                    </div>
                    @await Html.PartialAsync("~/Views/Shared/_GridTools.cshtml")
                    <div class="table-responsive">
                        @await Html.PartialAsync("~/Views/Shared/_TableSpinner.cshtml")
                        <table id="modelList" class="table table-striped table-bordered table-hover dataTable no-footer" style="width:100%">
                            <thead class="bordered-darkorange" data-actionColumn="custom">
                                <tr>
                                    <th data-viewModel="Id" style="width: 30px;">
                                        <div class="checkbox"><label style="font-size: 1.2em"><input type="checkbox" value=""><span class="cr"><i class="cr-icon fa fa-check"></i></span></label></div>
                                    </th>
                                    <th data-viewModel="Name">نام</th>
                                    <th data-viewModel="CourseName">گروه آزمون </th>
                                    <th data-viewModel="Price" data-thousandSeparator="true">قیمت</th>
                                    <th data-viewModel="DiscountType">نوع تخفیف</th>
                                    <th data-viewModel="DiscountPercentOrDiscountAmount">تخفیف</th>
                                    <th data-viewModel="StartDate">تاریخ شروع</th>
                                    <th data-viewModel="StartTime">زمان شروع</th>
                                    <th data-viewModel="Duration">مدت زمان آزمون</th>
                                    <th data-viewModel="IsPurchasableName">آیا قابل خرید می باشد؟</th>
                                    <th data-viewModel="IsAbleToEnterExpiredExamName">امکان ورود به آزمون منقضی شده؟</th>
                                    <th data-viewModel="IsActiveName">وضعیت</th>
                                    <th style="width:220px;">عملیات</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                    @{
                        await Html.RenderPartialAsync("Create.cshtml");
                        await Html.RenderPartialAsync("Edit.cshtml");
                        await Html.RenderPartialAsync("_TeacherAssignmentModal.cshtml");
                        await Html.RenderPartialAsync("_UploadQuestionPDFModal.cshtml");
                    }
                </div>
            </div><!--Widget Body-->
        </div><!--Widget-->
    </div>
</div>



