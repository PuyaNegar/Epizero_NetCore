@{
    ViewData["Title"] = "انتساب دانشجویان به آزمون";
    ViewData["PageFarsiName"] = "انتساب دانشجویان به آزمون";
    string Area = "OnlineExams";
    string Controller = "OnlineExamStudents";
}
<script src="~/js/DataBindingServerSide.min.js"></script>
<script id="operands" type="text/html">
    <button class="btn btn-danger btn-xs deleteBtn" type="button" style="margin-right:5px; margin-top:2px;  width:60px;"><i class="glyphicon glyphicon-remove" style="margin-left: 3px;"></i>حذف</button>

    <div class="dropdown clearfix" style="float:left;margin-right:5px;">
        <button style="margin-top: 2px;width: 80px;" class="btn btn-default dropdown-toggle btn-xs" type="button" data-toggle="dropdown" aria-haspopup="true" aria-expanded="true"> موارد بیشتر <span class="caret"></span> </button>
        <ul class="dropdown-menu pull-right">
            <li class="li-questionAnswerManuleBtn"><a class="questionAnswerManuleBtn" style="margin-right:5px; margin-top:2px; "><i class="glyphicon glyphicon-question-sign" style="margin-left: 3px;"></i>ثبت پاسخ برگ سوالات</a></li>
            <li class="li-questionAnswerBtn"><a class="questionAnswerBtn" style="margin-right:5px; margin-top:2px; "><i class="glyphicon glyphicon-eye-open" style="margin-left: 3px;"></i>مشاهده پاسخ های آزمون</a> </li>
            <li class="li-questionResultAnswerBtn"><a class="questionResultAnswerBtn" style="margin-right:5px; margin-top:2px; "><i class="glyphicon glyphicon-retweet" style="margin-left: 3px;"></i>مشاهده نتایج آزمون</a> </li>
            <li class="li-studentOnlineExamResultsResetBtn"><a class="studentOnlineExamResultsResetBtn" style="margin-right:5px; margin-top:2px; "><i class="glyphicon glyphicon-retweet" style="margin-left: 3px;"></i>فرصت دوباره جهت شرکت در آزمون</a></li>
        </ul>
    </div>
</script>
<script type="text/javascript">
    extendViewModelColumns.push('HasEnterDateTime');
    extendViewModelColumns.push('IsFinalized');
    extendViewModelColumns.push('IsExpired');
    MainViewModel.handoutAnswer = ko.observable({});
    DataBind('/@Area/@Controller/Add/',
        '/@Area/@Controller/Read/' + '@ViewBag.OnlieExamId',
        '/@Area/@Controller/Find/',
        '/@Area/@Controller/Update/',
        '/@Area/@Controller/Delete/', '', true);
    $(function () {
        rebulidChosen('#CourseId');
        $('#delete').remove();
        GenerateReturnBtn();

        $('.buttons-preview').append('<a id="handoutAnswerBtn" style="width:auto" class="btn btn-dark btn-sm shiny"> <span class="glyphicon glyphicon-align-justify" aria-hidden="true"></span> انتخاب دانش آموزان برای پاسخ برگ دستی </a>');

        $('body').on('click', '#handoutAnswerBtn', function () {

            DataTransfer('/TrainingManagement/CourseAndCourseMeetingStudents/ReadCourseMeetingStudentsWithoutDuplicateByOnlineExamId/' + @ViewBag.OnlieExamId, '', '',
                function (f) {
                    toastr.remove();
                    if (!f.IsSuccess) {
                        toastr.error(f.Message);
                    } else {
                        $('#handoutAnswerModal').modal({ backdrop: 'static', keyboard: false });
                        $('#handoutAnswerModal').modal('show');
                        MainViewModel.handoutAnswer(f.Value);
                    }
                },
                function (e) {
                    toastr.remove();
                    toastr.error("خطا در ارتباط با سرور");
                }
            );

        });
        //====================================================================
        $('body').on('click', '#submitHandoutAnswerBtn', function (e) {
            e.preventDefault();
            var $checkbox = $('#studentList-2').find('input[type=checkbox]:checked');
            var StudentUserIds = new Array();
            for (i = 0; i < $checkbox.length; i++) {
                StudentUserIds.push(parseInt($checkbox.eq(i).attr('data-studentUserId')));
            }
            var data = {
                StudentUserIds: StudentUserIds,
                OnlineExamId: @ViewBag.OnlieExamId,
            }

            DataTransfer('/TrainingManagement/AddStudentToIndependentOnlineExam/Operation', JSON.stringify(data), '',
                function (f) {
                    toastr.remove();
                    if (!f.IsSuccess) {
                        toastr.error(f.Message);
                    } else {
                        toastr.success(f.Message);
                        $('#handoutAnswerModal').modal('hide');
                        $('#reloadTableBtn').click();
                    }
                },
                function (e) {
                    toastr.remove();
                    toastr.error("خطا در ارتباط با سرور");
                }
            );

        });

        $('#handoutAnswerModal').on("shown.bs.modal", function (event) {
            $('.all-student input[type=checkbox]').prop('checked', false);
        });

        //====================================================================
        $('body').on('click', '.questionAnswerBtn', function () {
            var id = $('#modelList').DataTable().row($(this).parents('tr').eq(0)).data().Id;
            pageLoader('#PageContent', '#pageLoader', '/OnlineExams/OnlineExamStudentAnswers/Index/' + id, true);
        });
        //====================================================================
        $('body').on('click', '.questionAnswerManuleBtn', function () {
            var id = $('#modelList').DataTable().row($(this).parents('tr').eq(0)).data().Id;
            pageLoader('#PageContent', '#pageLoader', '/OnlineExams/OnlineExamStudentManualAnswers/Index/' + id, true);
        });
        //====================================================================
        $('body').on('click', '.questionResultAnswerBtn', function () {
            var id = $('#modelList').DataTable().row($(this).parents('tr').eq(0)).data().Id;
            pageLoader('#PageContent', '#pageLoader', '/OnlineExams/StudentOnlineExamResults/ShowResultPage/' + id, true);
        });
        //====================================================================
        $('#CourseId').change(function () {
            if (IsNullOrEmptyString($(this).val()))
                return;
            DataTransfer('/TrainingManagement/CourseAndCourseMeetingStudents/ReadCourseStudents/' + $(this).val(), '', '',
                function (f) {
                    toastr.remove();
                    if (!f.IsSuccess) {
                        toastr.error(f.Message);
                    } else {
                        MainViewModel.c(f.Value);
                    }
                },
                function (e) {
                    toastr.remove();
                    toastr.error("خطا در ارتباط با سرور");
                }
            );
        });
        //====================================================================
        $('body').on('click', '.deleteBtn', function () {
            if (confirm("آیا از حذف دانش آموز اطمینان دارید ؟ ")) {
                var Id = $('#modelList').DataTable().row($(this).parents('tr')).data().Id;
                var data =
                {
                    Id: Id,
                    OnlineExamId: @ViewBag.OnlieExamId,
                };
                DataTransfer('/OnlineExams/OnlineExamStudents/Delete/', JSON.stringify(data), '#resultLoader',
                    function (f) {
                        toastr.remove();
                        if (!f.IsSuccess) {
                            toastr.error(f.Message);
                        } else {
                            toastr.success(f.Message);
                            $('#reloadTableBtn').click();
                        }
                    },
                    function (e) {
                        toastr.remove();
                        toastr.error("خطا در ارتباط با سرور");
                    }
                );
            }
        });


        $('body').on('change', '.all-student input[type=checkbox]', function () {
            var $checkbox = $('#studentList-2').find('input[type=checkbox]');
            if ($(this).is(':checked')) {
                for (i = 0; i < $checkbox.length; i++) {
                    $checkbox.eq(i).prop('checked', true);
                }
            } else {
                for (i = 0; i < $checkbox.length; i++) {
                    $checkbox.eq(i).prop('checked', false);
                }
            }
        });

        $('body').on('change', '.all-student input[type=checkbox]', function () {
            var $checkbox = $('#studentList').find('input[type=checkbox]');
            if ($(this).is(':checked')) {
                for (i = 0; i < $checkbox.length; i++) {
                    $checkbox.eq(i).prop('checked', true);
                }
            } else {
                for (i = 0; i < $checkbox.length; i++) {
                    $checkbox.eq(i).prop('checked', false);
                }
            }
        });
        AddBoxModalOnShow = function () {
            $('.all-student input[type=checkbox]').prop('checked', false);
            var $checkbox = $('#studentList').find('input[type=checkbox]');
            for (i = 0; i < $checkbox.length; i++) {
                $checkbox.eq(i).prop('checked', false);
            }
        }


        //=======================================================================
        TableOnDraw = function () {
            for (i = 0; i < $('#modelList > tbody > tr').length; i++) {
                var IsFinalized = $('#modelList').DataTable().row($('#modelList > tbody > tr').eq(i)).data().IsFinalized;
                var HasEnterDateTime = $('#modelList').DataTable().row($('#modelList > tbody > tr').eq(i)).data().HasEnterDateTime;
                var IsExpired = $('#modelList').DataTable().row($('#modelList > tbody > tr').eq(i)).data().IsExpired;
                //if (IsFinalized == "True" || HasEnterDateTime == "True" || IsExpired == "False") {
                //    $('#modelList > tbody > tr').eq(i).find('.li-questionAnswerManuleBtn').css('display', 'none');
                //}
                if (HasEnterDateTime == "False" || IsExpired == "False") {
                    $('#modelList > tbody > tr').eq(i).find('.li-questionResultAnswerBtn').css('display', 'none');
                }

            }
        }
        //====================================================================
        $('body').on('click', '.studentOnlineExamResultsResetBtn', function () {
            if (confirm("آیا از فرصت مجدد برای دانش آموز جهت شرکت در آزمون اطمینان دارید ؟ ")) {
                var Id = $('#modelList').DataTable().row($(this).parents('tr')).data().Id;
                DataTransfer('/OnlineExams/StudentOnlineExamResultsReset/Operation/' + Id, '', '#resultLoader',
                    function (f) {
                        toastr.remove();
                        if (!f.IsSuccess) {
                            toastr.error(f.Message);
                        } else {
                            toastr.success(f.Message);
                            $('#reloadTableBtn').click();
                        }
                    },
                    function (e) {
                        toastr.remove();
                        toastr.error("خطا در ارتباط با سرور");
                    }
                );
            }
        });


        //====================================================================
        $('#submitBtn').click(function () {
            var $checkbox = $('#studentList').find('input[type=checkbox]:checked');
            var StudentUserIds = new Array();
            for (i = 0; i < $checkbox.length; i++) {
                StudentUserIds.push(parseInt($checkbox.eq(i).attr('data-studentUserId')));
            }
            var data = {
                StudentUserIds: StudentUserIds,
                OnlineExamId: @ViewBag.OnlieExamId,
            }

            DataTransfer('/OnlineExams/OnlineExamStudents/Add', JSON.stringify(data), '',
                function (f) {
                    toastr.remove();
                    if (!f.IsSuccess) {
                        toastr.error(f.Message);
                    } else {
                        toastr.success(f.Message);
                        $('#AddBox').modal('hide');
                        $('#reloadTableBtn').click();
                    }
                },
                function (e) {
                    toastr.remove();
                    toastr.error("خطا در ارتباط با سرور");
                }
            );
        });
    });
</script>
<style type="text/css">
    .chosen-container .chosen-drop {
        z-index: 9999;
    }
</style>
<div class="row">
    <div class="col-lg-12">
        <div class="widget">
            <div class="widget-header">
                <span class="widget-caption">نمايش اطلاعات</span>
                <div class="widget-buttons">
                    <a href="#" data-toggle="maximize">
                        <i class="fa fa-expand"></i>
                    </a>
                </div><!--Widget Buttons-->
            </div><!--Widget Header-->
            <div class="widget-body bordered-top bordered-gray" style="height: auto;">
                <div id="mainArea">
                    @await Html.PartialAsync("~/Views/Shared/_ActionButtonsPartial.cshtml")
                    <div class="alert alert-info" role="alert">
                        <div class="row">
                            <div class="col-sm-12">
                                <div style="margin-bottom: 0; color: #a86363; font-size: 14px !important; padding: 7px;" class="form-group">
                                    <span style="font-size:15px;" class="glyphicon glyphicon-list alert-info-icon"></span> دانش مربوط به آزمون  <span class="alert-info-text"> @(ViewBag.OnlineExamName)   </span> نوع سوالات <span class="alert-info-text">@(ViewBag.QuestionTypeName)</span>
                                </div>
                            </div>
                        </div>
                    </div>
                    @await Html.PartialAsync("~/Views/Shared/_GridTools.cshtml")
                    <div class="table-responsive">
                        @await Html.PartialAsync("~/Views/Shared/_TableSpinner.cshtml")
                        <table id="modelList" class="table table-striped table-bordered table-hover dataTable no-footer" style="width:100%">
                            <thead class="bordered-darkorange" data-actionColumn="custom">
                                <tr>
                                    <th data-viewModel="Id" style="width: 30px;"></th>
                                    <th data-viewModel="StudentFullName">نام نام خانوادگی</th>
                                    <th data-viewModel="EnterDateTime">تاریخ/زمان ورود به آزمون</th>
                                    <th data-viewModel="IsFinalizedName">اتمام آزمون</th>
                                    <th data-viewModel="IsAbsentOnMainTimeName">ورود با غیبت</th>
                                    <th style="width: 180px;">عملیات</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                    @{
                        await Html.RenderPartialAsync("Create.cshtml");
                        await Html.RenderPartialAsync("_HandoutAnswersModal.cshtml");
                    }
                </div>
            </div><!--Widget Body-->
        </div><!--Widget-->
    </div>
</div>



