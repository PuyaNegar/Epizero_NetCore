@model IEnumerable<PanelViewModels.TrainingManagementViewModels.CourseStudentsViewModel>
@{
    ViewData["Title"] = "دانش آموزان دوره";
    ViewData["PageFarsiName"] = "دانش آموزان دوره";
    string Area = "TrainingManagement";
    string Controller = "CourseStudents";
}
<script>
    $(function () {
        $('#delete').remove();
    });
</script>
<script id="operands" type="text/html">
    <div class="dropdown clearfix" style="float:right;margin-right:5px;">
        <button class="btn btn-danger btn-xs delete-student" type="button" style="margin-left:10px; margin-top:2px;  width:70px; "><i class="fa fa-remove" style="margin-left: 1px;"></i>حذف</button>
    </div>
</script>
<script src="~/js/DataBindingServerSide.min.js"></script>
<script type="text/javascript">
    MainViewModel.studentCourse = ko.observable({});
    MainViewModel.studentCourseMeeting = ko.observable({});
    DataBind('/@Area/@Controller/Add/',
        '/@Area/@Controller/Read/' + @ViewBag.CourseId,
        '/@Area/@Controller/Find/',
        '/@Area/@Controller/Update/',
        '', '', true);
    $(function () {
          $('.buttons-preview').append('<button id="selectedcourseStudentBtn" style="width:auto" class="btn btn-dark btn-sm shiny"> <span class="glyphicon glyphicon-align-justify" aria-hidden="true"></span> انتخاب دانش آموزان  دوره  </button>');
        $('.buttons-preview').append('<button id="selectedcourseMeetingStudentBtn" style="width:auto" class="btn btn-dark btn-sm shiny"> <span class="glyphicon glyphicon-align-justify" aria-hidden="true"></span> انتخاب دانش آموزان  جلسات دوره  </button>');
        rebulidChosen('#CourseId');
        rebulidChosen('#m_CourseId');
        rebulidChosen('#CourseMeetingId');
        GenerateReturnBtn();
        $('#delete').remove();
      
        $('body').on('click', '#selectedcourseStudentBtn', function () {
            $('#studentCourseModal').modal({ backdrop: 'static', keyboard: false });
            $('#studentCourseModal').modal('show');
        });
        $('body').on('click', '#selectedcourseMeetingStudentBtn', function () {
            $('#m_CourseId').change();
 
            $('#studentCourseMeetingModal').modal({ backdrop: 'static', keyboard: false });
            $('#studentCourseMeetingModal').modal('show');
        });
        $('#CourseId').change(function () {
            if (IsNullOrEmptyString($(this).val()))
                return;
            DataTransfer('/TrainingManagement/CourseAndCourseMeetingStudents/ReadCourseStudents/' + $(this).val(), '', '',
                function (f) {
                    toastr.remove();
                    if (!f.IsSuccess) {
                        toastr.error(f.Message);
                    } else {
                        MainViewModel.studentCourse(f.Value);
                    }
                },
                function (e) {
                    toastr.remove();
                    toastr.error("خطا در ارتباط با سرور");
                }
            );
        });
        $("#m_CourseId").change(function () {
            CreateComboLoader("/TrainingManagement/CourseMeetings/ReadForComboBox/", "#CourseMeetingId", '', "Value", "Text", $(this).val(), false,
                function () {
                    $('#CourseMeetingId').change();
                    rebulidChosen('#CourseMeetingId');
                }, null);
        });
        $('#CourseMeetingId').change(function () {
            if (IsNullOrEmptyString($(this).val()))
                return;
            DataTransfer('/TrainingManagement/CourseAndCourseMeetingStudents/ReadCourseMeetingStudents/' + $(this).val(), '', '',
                function (f) {
                    toastr.remove();
                    if (!f.IsSuccess) {
                        toastr.error(f.Message);
                    } else {
                        MainViewModel.studentCourseMeeting(f.Value);
                    }
                },
                function (e) {
                    toastr.remove();
                    toastr.error("خطا در ارتباط با سرور");
                }
            );
        });
        //=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        $('#studentCourseModal').on("shown.bs.modal", function (event) {
            $('.all-student input[type=checkbox]').prop('checked', false);
            $('#studentList input[type=checkbox]').prop('checked', false);
        });
        $('#studentCourseMeetingModal').on("shown.bs.modal", function (event) {
            $('.m_all-student input[type=checkbox]').prop('checked', false);
            $('#m_studentList input[type=checkbox]').prop('checked', false);
        });
        $('body').on('change', '.all-student input[type=checkbox]', function () {
            var $checkbox = $('#studentList').find('input[type=checkbox]');
            if ($(this).is(':checked')) {
                for (i = 0; i < $checkbox.length; i++) {
                    $checkbox.eq(i).prop('checked', true);
                }
            } else {
                for (i = 0; i < $checkbox.length; i++) {
                    $checkbox.eq(i).prop('checked', false);
                }
            }
        });
        $('body').on('change', '.m_all-student input[type=checkbox]', function () {
            var $checkbox = $('#m_studentList').find('input[type=checkbox]');
            if ($(this).is(':checked')) {
                for (i = 0; i < $checkbox.length; i++) {
                    $checkbox.eq(i).prop('checked', true);
                }
            } else {
                for (i = 0; i < $checkbox.length; i++) {
                    $checkbox.eq(i).prop('checked', false);
                }
            }
        });

        //=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        TableOnDraw = function () {
            for (i = 0; i < $('#modelList > tbody > tr').length; i++) {

                var data = $('#modelList').DataTable().row($('#modelList > tbody > tr').eq(i)).data().IsActiveName;
                
                if (data != "فعال") {
                    $('#modelList > tbody > tr').eq(i).css("background-color", "#ff837a");
                    $('.delete-student')[i].remove();
                }
            }
        }
       
        //---
        $('body').on('click', '#submitstudentCourseBtn', function (e) {
            e.preventDefault();
            var $checkbox = $('#studentList').find('input[type=checkbox]:checked');
            var StudentUserIds = new Array();
            for (i = 0; i < $checkbox.length; i++) {
                StudentUserIds.push(parseInt($checkbox.eq(i).attr('data-studentUserId')));
            }
            var data = {
                StudentUserIds: StudentUserIds,
                CourseId: @ViewBag.CourseId,
            }
            DataTransfer('/TrainingManagement/CourseStudents/AddStudentCourse', JSON.stringify(data), '',
                function (f) {
                    toastr.remove();
                    if (!f.IsSuccess) {
                        toastr.error(f.Message);
                    } else {
                        toastr.success(f.Message);
                        $('#studentCourseModal').modal('hide');
                        $('#reloadTableBtn').click();
                    }
                },
                function (e) {
                    toastr.remove();
                    toastr.error("خطا در ارتباط با سرور");
                }
            );

        });

        $('body').on('click', '#submitstudentCourseMeetingBtn', function (e) {
            e.preventDefault();
            var $checkbox = $('#m_studentList').find('input[type=checkbox]:checked');
            var StudentUserIds = new Array();
            for (i = 0; i < $checkbox.length; i++) {
                StudentUserIds.push(parseInt($checkbox.eq(i).attr('data-studentUserId')));
            }
            var data = {
                StudentUserIds: StudentUserIds,
                CourseId: @ViewBag.CourseId,
            }
            DataTransfer('/TrainingManagement/CourseStudents/AddStudentCourse', JSON.stringify(data), '',
                function (f) {
                    toastr.remove();
                    if (!f.IsSuccess) {
                        toastr.error(f.Message);
                    } else {
                        toastr.success(f.Message);
                        $('#studentCourseMeetingModal').modal('hide');
                        $('#reloadTableBtn').click();
                    }
                },
                function (e) {
                    toastr.remove();
                    toastr.error("خطا در ارتباط با سرور");
                }
            );

        });
        //=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        AddBoxModalOnHide = function () {
            StudentUserChosenResetComponent();
        }
         //==========================================================
        AddBoxModalOnShow = function () {
            MainViewModel.c().CourseId = @ViewBag.CourseId;
        }
        //==========================================================
        $('body').on('click', '.delete-student', function () {
            var id = $('#modelList').DataTable().row($(this).parents('tr').eq(0)).data().Id;

            bootbox.confirm({
                message: "آیا برای حذف موارد انتخاب شده مطمئن می باشید؟",
                buttons: {
                    confirm: {
                        label: 'تایید',
                        className: 'btn-primary'
                    },
                    cancel: {
                        label: 'انصراف',
                        className: 'btn-default'
                    }
                },
                callback: function (result) {
                    if (result) {
                        DataTransfer('/@Area/@Controller/Delete/', JSON.stringify({ Id: id }), '#resultLoader',
                            function (f) {
                                if (!f.IsSuccess) {
                                    toastr.error(f.Message);
                                } else {
                                    toastr.success(f.Message);
                                    $('#reloadTableBtn').click();
                                }
                            },
                            function (e) {
                                toastr.error('خطا در ارتباط با سرور ');
                            }
                        );
                    }
                }
            });
        });
        //=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        $('body').on('click', '#create', function () {
            $('#AddBox').modal({ backdrop: 'static', keyboard: false });
            $('#AddBox').modal('show');
        });
        //=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=
        $('#IsApplyFinancialOperations').change(function () {
            if ($(this).val() == 1)
                $('.showboxItem').slideDown();
            else
                $('.showboxItem').slideUp();
        });
    });
</script>
<div class="row">
    <div class="col-lg-12">
        <div class="widget">
            <div class="widget-header">
                <span class="widget-caption">نمايش اطلاعات</span>
                <div class="widget-buttons">
                    <a href="#" data-toggle="maximize">
                        <i class="fa fa-expand"></i>
                    </a>
                </div><!--Widget Buttons-->
            </div><!--Widget Header-->
            <div class="widget-body bordered-top bordered-gray" style="height: auto;">
                <div id="mainArea">
                    @await Html.PartialAsync("~/Views/Shared/_ActionButtonsPartial.cshtml")
                    <div class="alert alert-info" role="alert">
                        <div class="row">
                            <div class="col-sm-12">
                                <div style="margin-bottom:0;color:#a86363; font-size:14px !important; padding:7px;" class="form-group">
                                    <span class="glyphicon glyphicon-time alert-info-icon"></span>  دانش آموزان مربوط به دوره <span class="alert-info-text"> @(ViewBag.CourseName)  </span>
                                </div>
                            </div>
                        </div>
                    </div>
                    @await Html.PartialAsync("~/Views/Shared/_GridTools.cshtml")
                    <div class="table-responsive">
                        @await Html.PartialAsync("~/Views/Shared/_TableSpinner.cshtml")
                        <table id="modelList" class="table table-striped table-bordered table-hover dataTable no-footer" style="width:100%">
                            <thead class="bordered-darkorange" data-actionColumn="custom">
                                <tr>
                                    <th data-viewModel="Id" style="width: 30px;">
                                        <div class="checkbox"><label style="font-size: 1.2em"><input type="checkbox" value=""><span class="cr"><i class="cr-icon fa fa-check"></i></span></label></div>
                                    </th>
                                    <th data-viewModel="UserName">نام کاربری</th>
                                    <th data-viewModel="StudentFullName">دانش آموزان</th>
                                    <th data-viewModel="FieldName">رشته</th>
                                    <th data-viewModel="IsOnlineRegistratedName">نوع ثبت نام</th>
                                    <th data-viewModel="IsTemporaryRegistrationName">وضعیت ثبت نام</th>
                                    <th data-viewModel="PaidAmount" data-thousandSeparator="true">مبلغ پرداختی (تومان)</th>
                                    <th data-viewModel="DiscountAmount" data-thousandSeparator="true">مبلغ تخفیف (تومان)</th>
                                    <th data-viewModel="UserEditor">مسئول ثبت نام</th>
                                    <th data-viewModel="IsActiveName">فعال یا انصرافی</th>
                                    <th style="width: 140px;">عملیات</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                    @{
                        await Html.RenderPartialAsync("Create.cshtml");
                        await Html.RenderPartialAsync("_SelectedStudentCourseModal.cshtml");
                        await Html.RenderPartialAsync("_SelectedStudentCourseMeetingModal.cshtml");
                    }
                </div>
            </div><!--Widget Body-->
        </div><!--Widget-->
    </div>
</div>



