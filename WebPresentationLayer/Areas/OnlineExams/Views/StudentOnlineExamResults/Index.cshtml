@{
    ViewData["Title"] = "نتایج آزمون های آنلاین";
    Layout = "~/Views/Shared/_StudentDashboardLayout.cshtml";
}
@using Common.Functions;
@using Common.Extentions;
<script type="text/javascript">
    $(function () {
        DataTransfer('/OnlineExams/StudentAcademicProgressCharts/Read/' + '@ViewBag.CourseId', 'Get', '', '',
            function (f) {
                toastr.remove();

                function random_rgba() {
                    var o = Math.round, r = Math.random, s = 255;
                    return 'rgba(' + o(r() * s) + ',' + o(r() * s) + ',' + o(r() * s) + ')';
                }
                const DATA_COUNT = 0;
                const NUMBER_CFG = { count: 0, min: -100, max: 100 };
                const labels = { count: 0 };
                const data = {
                    labels: [],
                    datasets: []
                };


                data.labels = f.Value.Titles;
                for (i = 0; i < f.Value.Values.length; i++) {
                    var color = random_rgba();
                    data.datasets.push({
                        label: f.Value.Values[i].Title,
                        data: f.Value.Values[i].Values,
                        borderColor: color,
                        backgroundColor: color,
                        fill: false
                    });
                }
                var ctx = document.getElementById('myChart-academy').getContext('2d');
                var myChart = new Chart(ctx, {
                    type: 'line',
                    data: data,
                    options: {

                        responsive: true,
                        plugins: {
                            title: {
                                font: {
                                    footerFont: "iranyekan"
                                },
                                display: true,
                                text: (ctx) => 'روند پیشرفت تحصیلی'
                            },
                            tooltip: {
                                mode: 'index'
                            },
                        },
                        interaction: {
                            mode: 'nearest',
                            axis: 'x',
                            intersect: false
                        },

                        scales: {
                            x: {
                                ticks: {
                                    font: {
                                        family: "iranyekan" // right here
                                    },
                                    minRotation: 90
                                },
                                title: {
                                    display: true,

                                }
                            },
                            y: {
                                stacked: true,
                                title: {
                                    display: true,

                                }
                            }
                        }
                    }
                });
            },
            function (e) {
                toastr.remove();
                toastr.error(e.responseJSON.Message);
            }
        );

    });
</script>
<style type="text/css">
    .flex-sd{
       display:flex;
       justify-content: space-between;
       align-items:center;
       flex-direction:row;
    
        
    }
</style>
<script src="~/assets/chartjs/chart.js"></script>
@{
    var ResultExam = (List<WebViewModels.OnlineExamsViewModels.StudentOnlineExamResultsViewModel>)ViewBag.Data;
    int i = 1;
}
<div class="container-fluid">
    <div class="row">
        <div class="box-title-t">
            <span class="t-a"> نتایج آزمون (<span class="f-size-13">حداقل نمره،حداکثرنمره،میانگین نمره،رتبه در درس بعد از اتمام آزمون محاسبه خواهد شد</span>)       </span>
        </div>
    </div>
</div>

@if (ResultExam != null && ResultExam.Any())
{
    <div class="container">
        <div class="row">
            <div class="alert alert-warning flex-sd" role="alert" style="font-weight: bold;">
                @if (ResultExam.First().FieldId != null && ResultExam.First().FieldId != 4)
                {
                    <span>تعداد کل ثبت نام کنندگان:   @ViewBag.OnlineExamParticipantsCount نفر</span>
                }
                else
                {
                    <span>تعداد کل ثبت نام کنندگان:  - </span>

                }
                <span>نمره کل : @((ResultExam.Sum(c => c.LessonUnitCount * c.RawScore) / ResultExam.Sum(c => c.LessonUnitCount)).ToString("#.##")) </span>
                <span>تراز کل : @((ResultExam.Sum(c => c.LessonUnitCount * c.Balance) / ResultExam.Sum(c => c.LessonUnitCount)).ToString("#.##")) </span>
                <span>رتبه کل : @(ResultExam.FirstOrDefault() == null ? "محاسبه نشده" : ResultExam.First().TotalRank.ToString())</span>
              
              
            </div>

            <div class="cl-md-12">
                <div class="table-responsive">
                    <table class="table table-striped table-bordered">
                        <thead>
                            <tr>
                                <th class="center">#</th>
                                <th class="right">درس</th>
                                <th class="right">ضریب درس</th>
                                <th class="right">درست</th>
                                <th class="right">نادرست</th>
                                <th class="right">بدون پاسخ</th>
                                <th class="right">حداقل نمره</th>
                                <th class="right">حداکثر نمره</th>
                                <th class="right">میانگین نمره</th> 
                                <th class="right">تراز</th>
                                <th class="right"> نمره</th>
                                <th class="right"> رتبه در درس</th>
                                <th class="right"> نمودار</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in ResultExam)
                            {
                                <tr>
                                    <th class="center">@i</th>
                                    <td>@item.LessonName</td>
                                    <td>@item.LessonUnitCount</td>
                                    <td>@item.CorrectAnswered</td>
                                    <td>@item.IncorrectAnswered</td>
                                    <td>@item.Unanswered</td>
                                    <td>@item.MinScore</td>
                                    <td>@item.MaxScore</td>
                                    <td>@(item.AvrageScore.ToString("#.##"))</td>
                                    <td>@item.Balance</td>
                                    <td>@item.RawScore</td>
                                    <td>
                                        @if (item.FieldId != 4)
                                            @item.LessonRank
                                            else
                                            {<span>-</span>}

                                    </td>
                                    <td style="width:20px !important;height:20px !important;">
                                        <canvas id="myChart-@item.Id" style="width:100px !important;height:100px !important;"></canvas>
                                        <script>
                                            const data2@(item.Id) = [@item.CorrectAnswered,@item.IncorrectAnswered,@item.Unanswered];

                                            //method

                                            const names@(item.Id) = [
                                                'پاسخ صحیح', 'نادرست', 'بدون پاسخ'
                                            ];

                                            let total@(item.Id) = data2@(item.Id).reduce(
                                                (accumulator, currentValue) => accumulator + currentValue
                                            );

                                            //console.log(total);

                                            let labelss@(item.Id) = data2@(item.Id).map(
                                                (value@(item.Id), index@(item.Id)) => Math.round((value@(item.Id) / total@(item.Id)) * 100) + "%"
                                            );
                                            const data4@(item.Id) = data2@(item.Id).map((item@(item.Id), index@(item.Id)) => {
                                                return names@(item.Id)[index@(item.Id)] + " " + labelss@(item.Id)[index@(item.Id)];
                                            });

                                            const data@(item.Id) = {
                                                labels: data4@(item.Id),
                                                datasets: [{
                                                    data: data2@(item.Id),
                                                    backgroundColor: [
                                                        'Green', 'Red','Orange'
                                                    ],
                                                },],
                                            };
                                            var ctx@(item.Id) = document.getElementById('myChart-@item.Id').getContext('2d');
                                            var myChart = new Chart(ctx@(item.Id), {
                                                type: 'pie',
                                                data: data@(item.Id),
                                                options: {
                                                    plugins: {
                                                        legend: {
                                                            display: false
                                                        }
                                                    }
                                                }
                                            });
                                        </script>
                                    </td>
                                </tr>
                                { i++; }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <div class="container">
        <div class="row">
            <div class="box-empty">
                <div class="empty">
                    <img src="/assets/img/box-empty.svg" alt="نتایج آزمون">
                    <p>نتیجه ای برای شما ثبت نشده است.</p>
                </div>
            </div>
        </div>
    </div>
}

<div class="container-fluid">
    <div class="row">
        <div class="col-md-12 col-sm-12 col-xs-12">
            <hr />
        </div>
    </div>
</div>

<div class="container-fluid">
    <div class="row">
        <div class="box-title-t">
            <span class="t-a">نمودار پیشرفت تحصیلی</span>
        </div>
    </div>
</div>
<div class="container">
    <div class="row">
        <div class="center col-md-12 col-sm-12 col-xs-12">
            <canvas id="myChart-academy"></canvas>
        </div>
    </div>
</div>
